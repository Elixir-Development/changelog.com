apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: tls-sync-fastly
  namespace: ${NAMESPACE}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - command:
              - /bin/sh
              - -c
              args:
              - |-
                if [ -n "${DEBUG}" ]
                then
                  CURL_OPTIONS="--verbose"
                else
                  echo "Fail job on error..."
                  set -e
                  set -o pipefail
                fi

                #! https://developer.fastly.com/reference/api/tls/custom-certs/private-keys/
                cat > /tmp/key.json <<EOF
                {
                  "data": {
                    "type": "tls_private_key",
                    "attributes": {
                      "key": "$$(echo "$$TLS_KEY" | awk '{ printf "%s\\n", $$0 }')",
                      "name": "changelog.com"
                    }
                  }
                }
                EOF
                echo "But don't fail POST-ing private keys, as it's not idempotent"
                echo "This Fastly support ticket has all the details: https://support.fastly.com/hc/en-us/requests/329710"
                echo "TODO: What is the simplest way of checking that a private key exists?"
                curl $$CURL_OPTIONS --silent --show-error \
                  --header "Accept: application/vnd.api+json" \
                  --header "Content-Type: application/vnd.api+json" \
                  --header "Fastly-Key: $$FASTLY_API_TOKEN" \
                  --data @/tmp/key.json \
                  https://api.fastly.com/tls/private_keys 2>&1 | grep -v "$$FASTLY_API_TOKEN"

                #! https://developer.fastly.com/reference/api/tls/custom-certs/certificates/
                cat > /tmp/crt.json <<EOF
                {
                  "data": {
                    "type": "tls_certificate",
                    "attributes": {
                      "cert_blob": "$$(echo "$$TLS_CRT" | awk '{ printf "%s\\n", $$0 }')",
                      "name": "changelog.com"
                    }
                  }
                }
                EOF
                curl $$CURL_OPTIONS --silent --fail --show-error \
                  --header "Accept: application/vnd.api+json" \
                  --header "Content-Type: application/vnd.api+json" \
                  --header "Fastly-Key: $$FASTLY_API_TOKEN" \
                  --request PATCH \
                  --data @/tmp/crt.json \
                  https://api.fastly.com/tls/certificates/1LA0UjkMfnnMwzglSLdAc 2>&1 | grep -v "$$FASTLY_API_TOKEN"

                if [ -n "${DEBUG}" ]
                then
                  sleep infinity
                fi
              env:
              - name: TLS_KEY
                valueFrom:
                  secretKeyRef:
                    name: wildcard-acme-tls
                    key: tls.key
              - name: TLS_CRT
                valueFrom:
                  secretKeyRef:
                    name: wildcard-acme-tls
                    key: tls.crt
              - name: FASTLY_API_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: fastly
                    key: token
              image: curlimages/curl:7.72.0
              imagePullPolicy: IfNotPresent
              name: tls-sync-fastly
  # https://crontab.guru/#0_*/6_*_*_*
  schedule: 0 */6 * * *
  successfulJobsHistoryLimit: 4
  suspend: false
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backup-db
  namespace: ${NAMESPACE}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: db
              image: thechangelog/backups:202104
              imagePullPolicy: Always
              command: ["/usr/local/bin/backup_db_to_s3"]
              # command: ["sleep", "infinity"]
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backups-aws
                      key: access_key_id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backups-aws
                      key: secret_access_key
                - name: AWS_REGION
                  value: us-east-1
                - name: AWS_S3_BUCKET
                  value: changelog-com-backups
                - name: PGHOST
                  value: db
                - name: PGDATABASE
                  value: changelog
                - name: INSTANCE
                  value: ${NAMESPACE}_
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgres
                      key: password
            - name: uploads
              image: thechangelog/backups:202104
              imagePullPolicy: Always
              command: ["/usr/local/bin/backup_uploads_to_s3"]
              # command: ["sleep", "infinity"]
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: backups-aws
                      key: access_key_id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backups-aws
                      key: secret_access_key
                - name: AWS_REGION
                  value: us-east-1
                - name: AWS_S3_BUCKET
                  value: changelog-com-backups
                - name: UPLOADS_PATH
                  value: "/uploads"
              volumeMounts:
                - mountPath: "/uploads"
                  name: uploads-local-ssd
          volumes:
            - name: uploads-local-ssd
              persistentVolumeClaim:
                claimName: uploads-local-ssd
  # https://crontab.guru/#0_*/6_*_*_*
  schedule: 0 */6 * * *
  successfulJobsHistoryLimit: 4
  suspend: false
