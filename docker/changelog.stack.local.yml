version: "3.7"

services:
  netdata:
    image: netdata/netdata
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        failure_action: rollback
        monitor: 30s
        order: start-first
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    hostname: "${USER}-netdata"
    environment:
      VIRTUAL_HOST: "${USER}-netdata.changelog.com"
      # netdata container is too verbose, tell Logspout to not send logs to Papertrail
      # https://github.com/gliderlabs/logspout#ignoring-specific-containers
      LOGSPOUT: ignore
    ports:
      - "19999:19999"
    # cap_add, security_opt & privileged are not support by Docker Swarm, works OK without
    # https://stackoverflow.com/questions/53163044/docker-stack-ignoring-unsupported-options
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}/docker/netdata/postgres.conf:/etc/netdata/python.d/postgres.conf
      - ${PWD}/docker/netdata/nginx.conf:/etc/netdata/python.d/nginx.conf
    depends_on:
      - db11
      - proxy
  # log:
  #   image: gliderlabs/logspout:latest
  #   command: syslog+tls://logs7.papertrailapp.com:14349
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: any
  #     resources:
  #       limits:
  #         cpus: "0.5"
  #         memory: 1G
  #   environment:
  #     SYSLOG_HOSTNAME: "${USER}"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  # app_updater:
  #   image: thechangelog/bootstrap
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  #     # https://docs.docker.com/compose/compose-file/#update_config
  #     update_config:
  #       failure_action: rollback
  #       monitor: 30s
  #       order: stop-first
  #   command: update_service_continuously
  #   environment:
  #     HOSTNAME: "${HOSTNAME}"
  #     UPDATE_SERVICE_EVERY_N_SECONDS: 10
  #     DOCKER_SERVICE_IMAGE: thechangelog/changelog.com:local
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - changelog.com:/app:rw
  app:
    image: thechangelog/changelog.com:local
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      # https://docs.docker.com/compose/compose-file/#update_config
      update_config:
        failure_action: rollback
        monitor: 60s
        order: start-first
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
    environment:
      NODE: "${HOSTNAME}"
      DB_URL: "ecto://postgres@db11:5432/changelog" # DB_URL secret has precendence over this!
      PORT: 4000
      URL_HOST: &host "${USER}.changelog.com"
      URL_PORT: 80
      URL_SCHEME: http
      URL_STATIC_HOST: *host
      VIRTUAL_HOST: *host
      ROLLBAR_ENVIRONMENT: local
      ELIXIR_ERL_OPTIONS: "+S 2:2 +A 128 +K true"
    secrets:
      - CM_API_TOKEN
      - CM_SMTP_TOKEN
      - GITHUB_API_TOKEN
      - GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET
      - TWITTER_CONSUMER_KEY
      - TWITTER_CONSUMER_SECRET
      - SECRET_KEY_BASE
      - SIGNING_SALT
      - SLACK_INVITE_API_TOKEN
      - SLACK_APP_API_TOKEN
      - ROLLBAR_ACCESS_TOKEN
      - BUFFER_TOKEN
      - COVERALLS_REPO_TOKEN
      - ALGOLIA_APPLICATION_ID
      - ALGOLIA_API_KEY
    depends_on:
      - db11
    ports:
      - "4000:4000"
    volumes:
      - ${PWD}/priv/uploads:/uploads:rw
  db11:
    image: postgres:11.1
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
    environment:
      POSTGRES_USER: &pg_user postgres
      POSTGRES_DB: &pg_db changelog
      # https://www.postgresql.org/docs/11/libpq-envars.html
      PGUSER: *pg_user
      PGDATABASE: *pg_db
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 30s
    volumes:
      - ${PWD}/priv/db11:/var/lib/postgresql/data:rw
  proxy:
    image: thechangelog/proxy:2019-02-07.183116
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        failure_action: rollback
        monitor: 15s
        order: start-first
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
    environment:
      DEFAULT_HOST: *host
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${PWD}/priv/uploads:/var/www/uploads:ro

volumes:
  changelog.com:

# https://docs.docker.com/engine/swarm/secrets/#defining-and-using-secrets-in-compose-files
secrets:
  CM_API_TOKEN:
    external: true
  CM_SMTP_TOKEN:
    external: true
  GITHUB_API_TOKEN:
    external: true
  GITHUB_CLIENT_ID:
    external: true
  GITHUB_CLIENT_SECRET:
    external: true
  TWITTER_CONSUMER_KEY:
    external: true
  TWITTER_CONSUMER_SECRET:
    external: true
  SECRET_KEY_BASE:
    external: true
  SIGNING_SALT:
    external: true
  SLACK_INVITE_API_TOKEN:
    external: true
  SLACK_APP_API_TOKEN:
    external: true
  ROLLBAR_ACCESS_TOKEN:
    external: true
  BUFFER_TOKEN:
    external: true
  COVERALLS_REPO_TOKEN:
    external: true
  ALGOLIA_APPLICATION_ID:
    external: true
  ALGOLIA_API_KEY:
    external: true
