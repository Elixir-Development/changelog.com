#!/usr/bin/env ruby
# require "pry"

ASSET_PATH = "assets/static"

class Asset < Struct.new(:path)
  def name; File.basename path; end
  def image?; name.end_with? "png", "jpg", "gif", "svg"; end
  def in_js_or_css?; `ack #{name} priv/static`.length > 0; end
  def in_elixir?; `ack #{name} lib`.length > 0; end
end

puts "Images in #{ASSET_PATH} that are not referenced anywhere in code"
puts ""

Dir["#{ASSET_PATH}/**/*"].map { |x| Asset.new x }.select(&:image?).each do |image|
  next if image.in_js_or_css? || image.in_elixir?
  puts "\t#{image.path} not referenced"
end

puts "Images that are referenced in scss that do not exist in #{ASSET_PATH}"
puts ""

Dir["assets/app/**/*.scss"].each do |path|
  File.read(path).scan(/url\(['"](.*?)['"]\)/).flatten.each do |asset|
    if !File.exists?("#{ASSET_PATH}#{asset}")
      puts "\t#{asset} referenced in #{path} but does not exist"
    end
  end
end
