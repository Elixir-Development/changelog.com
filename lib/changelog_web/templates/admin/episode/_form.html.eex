<%= form_for @changeset, @action, [multipart: true, class: "ui form"], fn f -> %>
  <div class="two fields">
    <div class="twelve wide field required <%= AdminHelpers.error_class(f, :title) %>">
      <label for="title">
        Title
        <span><a href="javascript:void(0);" class="field-action js-title-guide-modal">(style guide)</a></span>
      </label>
      <%= text_input(f, :title, placeholder: "Why SQLite succeeded as a database") %>
      <%= AdminHelpers.error_message(f, :title) %>
    </div>

    <div class="four wide field required <%= AdminHelpers.error_class(f, :slug) %>">
      <%= label(f, :slug) %>
      <%= text_input(f, :slug, placeholder: "183", readonly: f.data.published) %>
      <%= AdminHelpers.error_message(f, :slug) %>
    </div>
  </div>

  <div class="two fields">
    <div class="twelve wide field <%= AdminHelpers.error_class(f, :subtitle) %>">
      <%= label(:f, :subtitle) do %>
        Subtitle <%= AdminHelpers.help_icon("Used underneath title on episode page and combined with title for html <title>") %>
        <span><a href="javascript:void(0);" class="field-action js-subtitle-guide-modal">(style guide)</a></span>
      <% end %>
      <%= text_input(f, :subtitle, placeholder: "with Richard Hipp, creator of SQlite") %>
    </div>

    <div class="four wide field <%= AdminHelpers.error_class(f, :status) %>">
      <%= label(:f, :type) do %>
        Type <%= AdminHelpers.help_icon("Full episodes require a numbered slug. Bonus & Trailer episodes are feed-only (no news item)") %>
      <% end %>
      <%= select(f, :type, type_options(), class: "ui fluid dropdown") %>
    </div>
  </div>

  <div class="fields">
    <div class="field <%= AdminHelpers.error_class(f, :featured) %>">
      <label>Recommended <%= AdminHelpers.help_icon("Episode will appear in recommended list. Limit to 10% of show's total episodes, max.") %></label>
      <div class="ui fitted toggle checkbox">
        <%= checkbox(f, :featured, class: "hidden") %>
        <%= AdminHelpers.error_message(f, :featured) %>
      </div>
    </div>

    <div class="field">
      <label>Requested</label>
      <div class="ui fitted toggle checkbox">
        <%= checkbox(f, :requested, class: "hidden", value: !!f.data.request_id) %>
      </div>
    </div>
  </div>

  <div class="field <%= AdminHelpers.error_class(f, :request_id) %> <%= AdminHelpers.hidden_class(!f.data.request_id) %>">
    <%= label(f, :request_id, "Request") %>
    <%= select(f, :request_id, request_options(@episode_requests), prompt: "Select a request", class: "ui fluid dropdown") %>
  </div>

  <div class="required field">
    <%= label(f, :hosts) %>

    <div class="ui middle aligned selection list js-episode_hosts">
      <%= inputs_for f, :episode_hosts, fn i -> %>
        <% host = AdminHelpers.load_from_form(i, Person, :person) %>
        <div class="item <%= if AdminHelpers.is_persisted(i.data), do: "persisted" %>">
          <%= hidden_input(i, :person_id) %>
          <%= hidden_input(i, :position, class: "js-position") %>
          <img class="ui avatar image" src="<%= ChangelogWeb.PersonView.avatar_url(host) %>">

          <div class="content">
            <div class="header"><%= host.name %> (@<%= host.handle %>)</div>
          </div>

          <div class="right floated content">
            <div class="ui tiny icon button js-remove">
              <i class="remove icon"></i>
              <%= hidden_input(i, :delete) %>
            </div>
          </div>
        </div>
      <% end %>
    </div>

    <div class="ui search">
      <div class="ui left icon input">
        <input class="prompt" type="text" placeholder="Add a Host">
        <i class="user icon"></i>
      </div>
    </div>
  </div>

  <div class="field">
    <%= label(f, :guests) %>

    <div class="ui middle aligned selection list js-episode_guests">
      <%= inputs_for f, :episode_guests, fn i -> %>
        <% guest = AdminHelpers.load_from_form(i, Person, :person) %>
        <div class="item <%= if AdminHelpers.is_persisted(i.data), do: "persisted" %>">
          <%= hidden_input(i, :person_id) %>
          <%= hidden_input(i, :position, class: "js-position") %>
          <img class="ui avatar image" src="<%= ChangelogWeb.PersonView.avatar_url(guest) %>">

          <div class="content">
            <div class="header"><%= guest.name %> (@<%= guest.handle %>)</div>
          </div>

          <div class="right floated content">
            <div class="ui tiny icon button js-remove">
              <i class="remove icon"></i>
              <%= hidden_input(i, :delete) %>
            </div>
          </div>
        </div>
      <% end %>
    </div>

    <div class="ui search">
      <div class="ui left icon input">
        <input class="prompt" type="text" placeholder="Add a Guest">
        <i class="user icon"></i>
      </div>
    </div>
  </div>

  <div class="field">
    <%= label(f, :sponsors) %>

    <div class="ui middle aligned selection list js-episode_sponsors">
      <%= inputs_for f, :episode_sponsors, fn i -> %>
        <% sponsor = AdminHelpers.load_from_form(i, Sponsor, :sponsor) %>
        <div class="item <%= if AdminHelpers.is_persisted(i.data), do: "persisted" %>">
          <%= hidden_input(i, :sponsor_id) %>
          <%= hidden_input(i, :position, class: "js-position") %>

          <div class="right floated content">
            <div class="ui tiny icon button js-remove">
              <i class="remove icon"></i>
              <%= hidden_input(i, :delete) %>
            </div>
          </div>

          <h4 class="ui sponsor header">
            #<span class="js-position-display"><%= i.data.position || i.params["position"] %></span> &mdash;
            <%= link(sponsor.name, to: Routes.admin_sponsor_path(@conn, :show, sponsor), rel: "external") %>
          </h4>

          <div class="fields">
            <div class="required four wide field <%= AdminHelpers.error_class(i, :title) %>">
              <label>Title</label>
              <%= text_input(i, :title) %>
              <%= AdminHelpers.error_message(i, :title) %>
            </div>

            <div class="required twelve wide field <%= AdminHelpers.error_class(i, :link_url) %>">
              <label>Link</label>
              <%= text_input(i, :link_url) %>
              <%= AdminHelpers.error_message(i, :link_url) %>
            </div>
          </div>

          <div class="field">
            <label>Description</label>
            <%= textarea(i, :description, rows: 1) %>
          </div>
        </div>
      <% end %>
    </div>

    <div class="ui search">
      <div class="ui left icon input">
        <input class="prompt" type="text" placeholder="Add a Sponsor">
        <i class="dollar icon"></i>
      </div>
    </div>
  </div>

  <div class="field">
    <%= label(f, :topics) %>

    <div class="ui horizontal selection list js-topics js-episode_topics">
      <%= inputs_for f, :episode_topics, fn i -> %>
        <% topic = AdminHelpers.load_from_form(i, Topic, :topic) %>
        <div class="item <%= if AdminHelpers.is_persisted(i.data), do: "persisted" %>">
          <%= hidden_input(i, :topic_id) %>
          <%= hidden_input(i, :position, class: "js-position") %>

          <div class="content">
            <a class="ui label">
              <%= topic.name %>
              <span class="js-remove">
                <i class="delete icon"></i>
                <%= hidden_input(i, :delete) %>
              </span>
            </a>
          </div>
        </div>
      <% end %>
    </div>

    <div class="ui search">
      <div class="ui left icon input">
        <input class="prompt" type="text" placeholder="Add a Topic">
        <i class="block layout icon"></i>
      </div>
    </div>
  </div>

  <div class="field required <%= AdminHelpers.error_class(f, :summary) %>">
    <%= label(f, :summary) %>
    <%= textarea(f, :summary, placeholder: "Keep it brief. Markdown enabled.", rows: 2) %>
    <%= AdminHelpers.error_message(f, :summary) %>
  </div>

  <div class="field">
    <%= label(f, :notes) %>
    <%= textarea(f, :notes, placeholder: "The more, the better. Markdown enabled.", rows: 5) %>
  </div>

  <div class="field">
    <%= label(f, :audio_file) do %>
      Audio File <%= AdminHelpers.help_icon("Upload after Slug, Publish Time, and Title are finalized so correct ID3 tags get written.") %>
    <% end %>

    <%= if f.data.audio_file  do %>
      <div class="ui raised segment items js-audio-file">
        <div class="ui item">
          <div class="content">
            <div class="header">
            <%= link(audio_filename(f.data), to: audio_url(f.data)) %>
            </div>
            <p class="description">
              Currently &mdash; a <span class="emphasis"><%= megabytes(f.data) %> MB</span> file,
              runs <span class="emphasis"><%= TimeView.duration(f.data.audio_duration) %></span>,
              last updated <span class="emphasis"><%= AdminHelpers.ts(f.data.audio_file.updated_at) %></span>
            </p>
          </div>
        </div>
      </div>
    <% end %>

    <%= file_input(f, :audio_file) %>
  </div>

  <div class="field">
    <%= label(f, :plusplus_file) do %>
      ++ File <%= AdminHelpers.help_icon("Upload after Slug, Publish Time, and Title are finalized so correct ID3 tags get written.") %>
    <% end %>

    <%= if f.data.plusplus_file  do %>
      <div class="ui raised segment items js-audio-file">
        <div class="ui item">
          <div class="content">
            <div class="header">
            <%= link(plusplus_filename(f.data), to: plusplus_url(f.data)) %>
            </div>
            <p class="description">
              Currently &mdash; a <span class="emphasis"><%= megabytes(f.data, :plusplus) %> MB</span> file,
              runs <span class="emphasis"><%= TimeView.duration(f.data.plusplus_duration) %></span>,
              last updated <span class="emphasis"><%= AdminHelpers.ts(f.data.plusplus_file.updated_at) %></span>
            </p>
          </div>
        </div>
      </div>
    <% end %>

    <%= file_input(f, :plusplus_file) %>
  </div>

  <div class="two fields">
    <div class="inline field">
      <div class="ui toggle checkbox">
        <%= checkbox(f, :recorded_live, class: "hidden") %>
        <label>Recorded Live</label>
      </div>
    </div>

    <div class="inline field <%= if !f.data.recorded_live, do: "hidden" %> <%= AdminHelpers.error_class(f, :youtube_id) %>">
      <%= text_input(f, :youtube_id, placeholder: "dQw4w9WgXcQ") %>
      <%= label(f, :youtube_id, "YouTube ID") %>
    </div>
  </div>

  <div class="two fields">
    <div class="field <%= AdminHelpers.error_class(f, :recorded_at) %>">
      <%= label(f, :recorded_at, "Record Time") %>
      <%= AdminHelpers.semantic_calendar_field(f, :recorded_at) %>
      <%= AdminHelpers.error_message(f, :recorded_at) %>
    </div>

    <div class="field <%= AdminHelpers.error_class(f, :published_at) %>">
      <%= label(f, :published_at) do %>
        Publish Time <%= AdminHelpers.help_icon("Select a future time and click 'Publish' to schedule") %>
      <% end %>
      <%= AdminHelpers.semantic_calendar_field(f, :published_at) %>
      <%= AdminHelpers.error_message(f, :published_at) %>
    </div>
  </div>

  <div class="ui hidden divider"></div>

  <div class="ui equal width stackable grid">
  <%= if !AdminHelpers.is_persisted(f.data) do %>
    <div class="column"><%= AdminHelpers.submit_button(:primary, "Create") %></div>
    <div class="column"><%= AdminHelpers.submit_button(:secondary, "Create and Close", AdminHelpers.next_param(@conn, Routes.admin_podcast_episode_path(@conn, :index, @podcast.slug))) %></div>
  <% else %>
    <div class="column"><%= AdminHelpers.submit_button(:primary, "Save", "edit") %></div>
    <div class="column"><%= AdminHelpers.submit_button(:secondary, "Save and Close", AdminHelpers.next_param(@conn)) %></div>
  <% end %>
  <% end %>
  <div class="column">
  <%= if Policies.Admin.Episode.publish(@current_user, @changeset.data) do %>
    <%= render("_publish_buttons.html", assigns) %>
  <% end %>
  </div>
</div>

<%= render("_style_guide_modal.html", assigns) %>
